Process:
  gaussianblur3d:
    kind: bpm
    input:
      workspace: folderpath
      source: filepath
    declare:
      kernel: int
      coordinate: coordinate
      borderType: BorderTypes
      sleepSecs: int
      image: cvImage
      result: cvImage
      volume: Volume
    init:
      exp: |
        kernel = 7;
        coordinate = {"x":1,"y":1,"z":1};
        borderType = BorderTypes.DEFAULT;
        sleepSecs = 1;
        volume=Volume(workspace);
        source=nvl(source,"data/source.jpg");      
    bind: [kernel,coordinate,borderType,sleepSecs,image,result]
    nodes:
      start:
        kind: start
        transition: 
        - target: readImage
      readImage:
        kind: task
        exp: 'image=cvImread(volume.fullpath(source))'
        transition: 
        - target: transform
      transform:
        kind: task
        exp: 'result=cvGaussianBlur3D(image,kernel,coordinate,borderType)'
        transition: 
        - target: sleep
      sleep:
        kind: task
        exp: 'sleep(sleepSecs)'
        transition: 
        - target: transform   
    